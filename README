
To build OSv
============

0) Install perquisite packages:
   yum install boost-static genromfs

1) make sure all git submodules are uptodate
   -----------------------------------------

    git submodule update --init

2) build the specially patched libunwind
   -------------------------------------

    cd external/libunwind
    autoreconf -i
    sh config.sh
    make
    cp ./src/.libs/libunwind.a ../..
    cd ../..

4) build the glibc test suite

   cd external/glibc-testsuite
   make
   cd ../..

5) build osv
   ---------

    make

To run OSv
==========


    sh scripts/run.sh

Debugging
=========

To build with debugging symbols, and preemption off (to not confuse gdb),
	make -j mode=debug conf-preempt=0

To clean debugging build's results, use
	make clean mode=debug

To run the debugging build:
	sh scripts/run.sh debug

To connect a debugger to this run:
	$ gdb build/debug/loader.elf
	(gdb) connect
	(gdb) osv syms
	(gdb) bt

To put a breakpoint early in the osv run, a useful trick is tell the vm to
reboot after setting the breakpoint:
	(gdb) hbreak function_name
	(gdb) monitor system_reset
	(gdb) c

 Tracing
 =======
 Uncomment the "tracing-flags =" line in build.mak, and rebuild.
 Run the program until it aborts, then in gdb:

 osv syms
 set pagination off
 set logging on
 osv trace

 gdb.txt will contain the the trace.

Running java benchmarks
=======================

After running "make", do
    scripts/imgedit.py setargs build/debug/loader.img java.so -jar bench.jar

and then run normally (sh scripts/run.sh).
